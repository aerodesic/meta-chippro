From b1a595fa600fc8df487b87a178290666ba281473 Mon Sep 17 00:00:00 2001
From: Gary Oliver <go@aerodesic.com>
Date: Fri, 8 Dec 2017 13:28:01 -0800
Subject: [PATCH] modified to handle image_class ubi builds

---
 chip-create-nand-images.sh | 202 ++++++++++++++++++++++++---------------------
 common.sh                  |   3 +-
 2 files changed, 108 insertions(+), 97 deletions(-)

diff --git a/chip-create-nand-images.sh b/chip-create-nand-images.sh
index e604e4e..9be9a75 100755
--- a/chip-create-nand-images.sh
+++ b/chip-create-nand-images.sh
@@ -3,82 +3,87 @@
 SCRIPTDIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
 source $SCRIPTDIR/common.sh
 
-if [[ -z $(which ${MKFS_UBIFS}) ]]; then
-  echo "Could not find ${MKFS_UBIFS} in path."
-  echo "Install it with the CHIP-SDK setup script."
-  echo "You will also need to run this script as root."
-  exit 1
-fi
+# Removed because poky image_class creates the ubi
+# if [[ -z $(which ${MKFS_UBIFS}) ]]; then
+#   echo "Could not find ${MKFS_UBIFS} in path."
+#   echo "Install it with the CHIP-SDK setup script."
+#   echo "You will also need to run this script as root."
+#   exit 1
+# fi
 
 UBOOTDIR="$1"
-ROOTFSTAR="$2"
-OUTPUTDIR="$3"
-
-# build the UBI image
-prepare_ubi() {
-  local tmpdir=`mktemp -d -t chip-ubi-XXXXXX`
-  local rootfs=$tmpdir/rootfs
-  local ubifs=$tmpdir/rootfs.ubifs
-  local ubicfg=$tmpdir/ubi.cfg
-  local outputdir="$1"
-  local rootfstar="$2"
-  local nandtype="$3"
-  local maxlebcount="$4"
-  local eraseblocksize="$5"
-  local pagesize="$6"
-  local subpagesize="$7"
-  local oobsize="$8"
-  local ebsize=`printf %x $eraseblocksize`
-  local psize=`printf %x $pagesize`
-  local osize=`printf %x $oobsize`
-  local ubi=$outputdir/chip-$ebsize-$psize-$osize.ubi
-  local sparseubi=$outputdir/chip-$ebsize-$psize-$osize.ubi.sparse
-  local mlcopts=""
-
-  if [ -z $subpagesize ]; then
-    subpagesize=$pagesize
-  fi
-
-  if [ "$nandtype" = "mlc" ]; then
-    lebsize=$((eraseblocksize/2-$pagesize*2))
-    mlcopts="-M dist3"
-  elif [ $subpagesize -lt $pagesize ]; then
-    lebsize=$((eraseblocksize-pagesize))
-  else
-    lebsize=$((eraseblocksize-pagesize*2))
-  fi
-  
-  if [ "$osize" = "100" ]; then
-    #TOSH_512_SLC
-    volspec="vol_flags=autoresize"
-  elif [ "$osize" = "500" ]; then
-    #TOSH_4GB_MLC
-    volspec="vol_size=3584MiB"
-  elif [ "$osize" = "680" ]; then
-    #HYNI_8GB_MLC
-    volspec="vol_size=7168MiB"
-  else
-	echo "Unable to acquire appropriate volume size or flags, quitting!"
-	exit 1
-  fi
-
-  mkdir -p $rootfs
-  tar -xf $rootfstar -C $rootfs
-  ${MKFS_UBIFS} -d $rootfs -m $pagesize -e $lebsize -c $maxlebcount -o $ubifs
-  echo "[rootfs]
-mode=ubi
-vol_id=0
-$volspec
-vol_type=dynamic
-vol_name=rootfs
-vol_alignment=1
-image=$ubifs" > $ubicfg
-
-
-  ubinize -o $ubi -p $eraseblocksize -m $pagesize -s $subpagesize $mlcopts $ubicfg
-  img2simg $ubi $sparseubi $eraseblocksize
-  rm -rf $tmpdir
-}
+# ROOTFSTAR="$2"
+# OUTPUTDIR="$3"
+ERASEBLOCKSIZE="$2"
+PAGESIZE="$3"
+OOBSIZE="$4"
+
+# UBI Created outside of this
+# # build the UBI image
+# prepare_ubi() {
+#   local tmpdir=`mktemp -d -t chip-ubi-XXXXXX`
+#   local rootfs=$tmpdir/rootfs
+#   local ubifs=$tmpdir/rootfs.ubifs
+#   local ubicfg=$tmpdir/ubi.cfg
+#   local outputdir="$1"
+#   local rootfstar="$2"
+#   local nandtype="$3"
+#   local maxlebcount="$4"
+#   local eraseblocksize="$5"
+#   local pagesize="$6"
+#   local subpagesize="$7"
+#   local oobsize="$8"
+#   local ebsize=`printf %x $eraseblocksize`
+#   local psize=`printf %x $pagesize`
+#   local osize=`printf %x $oobsize`
+#   local ubi=$outputdir/chip-$ebsize-$psize-$osize.ubi
+#   local sparseubi=$outputdir/chip-$ebsize-$psize-$osize.ubi.sparse
+#   local mlcopts=""
+# 
+#   if [ -z $subpagesize ]; then
+#     subpagesize=$pagesize
+#   fi
+# 
+#   if [ "$nandtype" = "mlc" ]; then
+#     lebsize=$((eraseblocksize/2-$pagesize*2))
+#     mlcopts="-M dist3"
+#   elif [ $subpagesize -lt $pagesize ]; then
+#     lebsize=$((eraseblocksize-pagesize))
+#   else
+#     lebsize=$((eraseblocksize-pagesize*2))
+#   fi
+#   
+#   if [ "$osize" = "100" ]; then
+#     #TOSH_512_SLC
+#     volspec="vol_flags=autoresize"
+#   elif [ "$osize" = "500" ]; then
+#     #TOSH_4GB_MLC
+#     volspec="vol_size=3584MiB"
+#   elif [ "$osize" = "680" ]; then
+#     #HYNI_8GB_MLC
+#     volspec="vol_size=7168MiB"
+#   else
+# 	echo "Unable to acquire appropriate volume size or flags, quitting!"
+# 	exit 1
+#   fi
+# 
+#   mkdir -p $rootfs
+#   tar -xf $rootfstar -C $rootfs
+#   ${MKFS_UBIFS} -d $rootfs -m $pagesize -e $lebsize -c $maxlebcount -o $ubifs
+#   echo "[rootfs]
+# mode=ubi
+# vol_id=0
+# $volspec
+# vol_type=dynamic
+# vol_name=rootfs
+# vol_alignment=1
+# image=$ubifs" > $ubicfg
+# 
+# 
+#   ubinize -o $ubi -p $eraseblocksize -m $pagesize -s $subpagesize $mlcopts $ubicfg
+#   img2simg $ubi $sparseubi $eraseblocksize
+#   rm -rf $tmpdir
+# }
 
 # build the SPL image
 prepare_spl() {
@@ -133,29 +138,34 @@ prepare_uboot() {
 }
 
 ## copy the source images in the output dir ##
-mkdir -p $OUTPUTDIR
-cp $UBOOTDIR/spl/sunxi-spl.bin $OUTPUTDIR/
-cp $UBOOTDIR/u-boot-dtb.bin $OUTPUTDIR/
-cp $ROOTFSTAR $OUTPUTDIR/
-
-## prepare ubi images ##
-# Toshiba SLC image:
-prepare_ubi $OUTPUTDIR $ROOTFSTAR "slc" 2048 262144 4096 1024 256
-# Toshiba MLC image:
-prepare_ubi $OUTPUTDIR $ROOTFSTAR "mlc" 4096 4194304 16384 16384 1280
-# Hynix MLC image:
-prepare_ubi $OUTPUTDIR $ROOTFSTAR "mlc" 4096 4194304 16384 16384 1664
+# mkdir -p $OUTPUTDIR
+# cp $UBOOTDIR/spl/sunxi-spl.bin $OUTPUTDIR/
+# cp $UBOOTDIR/u-boot-dtb.bin $OUTPUTDIR/
+# cp $ROOTFSTAR $OUTPUTDIR/
+
+# UBI Created outside in poky image_class
+# ## prepare ubi images ##
+# # Toshiba SLC image:
+# prepare_ubi $OUTPUTDIR $ROOTFSTAR "slc" 2048 262144 4096 1024 256
+# # Toshiba MLC image:
+# prepare_ubi $OUTPUTDIR $ROOTFSTAR "mlc" 4096 4194304 16384 16384 1280
+# # Hynix MLC image:
+# prepare_ubi $OUTPUTDIR $ROOTFSTAR "mlc" 4096 4194304 16384 16384 1664
 
 ## prepare spl images ##
 # Toshiba SLC image:
-prepare_spl $OUTPUTDIR $UBOOTDIR/spl/sunxi-spl.bin 262144 4096 256
-# Toshiba MLC image:
-prepare_spl $OUTPUTDIR $UBOOTDIR/spl/sunxi-spl.bin 4194304 16384 1280
-# Hynix MLC image:
-prepare_spl $OUTPUTDIR $UBOOTDIR/spl/sunxi-spl.bin 4194304 16384 1664
+# prepare_spl $OUTPUTDIR $UBOOTDIR/sunxi-spl.bin 262144 4096 256
+# # Toshiba MLC image:
+# prepare_spl $OUTPUTDIR $UBOOTDIR/sunxi-spl.bin 4194304 16384 1280
+# # Hynix MLC image:
+# prepare_spl $OUTPUTDIR $UBOOTDIR/sunxi-spl.bin 4194304 16384 1664
 
-## prepare uboot images ##
-# Toshiba SLC image:
-prepare_uboot $OUTPUTDIR $UBOOTDIR/u-boot-dtb.bin 262144
-# Toshiba/Hynix MLC image:
-prepare_uboot $OUTPUTDIR $UBOOTDIR/u-boot-dtb.bin 4194304
+# ## prepare uboot images ##
+# # Toshiba SLC image:
+# prepare_uboot $OUTPUTDIR $UBOOTDIR/u-boot-dtb.bin 262144
+# # Toshiba/Hynix MLC image:
+# prepare_uboot $OUTPUTDIR $UBOOTDIR/u-boot-dtb.bin 4194304
+
+prepare_spl $UBOOTDIR $UBOOTDIR/sunxi-spl.bin $ERASEBLOCKSIZE $PAGESIZE $OOBSIZE
+
+prepare_uboot $UBOOTDIR $UBOOTDIR/u-boot-dtb.bin $ERASEBLOCKSIZE
-- 
2.7.4

